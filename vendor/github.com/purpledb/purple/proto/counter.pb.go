// Code generated by protoc-gen-go. DO NOT EDIT.
// source: counter.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IncrementCounterRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrementCounterRequest) Reset()         { *m = IncrementCounterRequest{} }
func (m *IncrementCounterRequest) String() string { return proto.CompactTextString(m) }
func (*IncrementCounterRequest) ProtoMessage()    {}
func (*IncrementCounterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75dcd656fce7132f, []int{0}
}

func (m *IncrementCounterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementCounterRequest.Unmarshal(m, b)
}
func (m *IncrementCounterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementCounterRequest.Marshal(b, m, deterministic)
}
func (m *IncrementCounterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementCounterRequest.Merge(m, src)
}
func (m *IncrementCounterRequest) XXX_Size() int {
	return xxx_messageInfo_IncrementCounterRequest.Size(m)
}
func (m *IncrementCounterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementCounterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementCounterRequest proto.InternalMessageInfo

func (m *IncrementCounterRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *IncrementCounterRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type GetCounterRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCounterRequest) Reset()         { *m = GetCounterRequest{} }
func (m *GetCounterRequest) String() string { return proto.CompactTextString(m) }
func (*GetCounterRequest) ProtoMessage()    {}
func (*GetCounterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75dcd656fce7132f, []int{1}
}

func (m *GetCounterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCounterRequest.Unmarshal(m, b)
}
func (m *GetCounterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCounterRequest.Marshal(b, m, deterministic)
}
func (m *GetCounterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCounterRequest.Merge(m, src)
}
func (m *GetCounterRequest) XXX_Size() int {
	return xxx_messageInfo_GetCounterRequest.Size(m)
}
func (m *GetCounterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCounterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCounterRequest proto.InternalMessageInfo

func (m *GetCounterRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetCounterResponse struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCounterResponse) Reset()         { *m = GetCounterResponse{} }
func (m *GetCounterResponse) String() string { return proto.CompactTextString(m) }
func (*GetCounterResponse) ProtoMessage()    {}
func (*GetCounterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75dcd656fce7132f, []int{2}
}

func (m *GetCounterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCounterResponse.Unmarshal(m, b)
}
func (m *GetCounterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCounterResponse.Marshal(b, m, deterministic)
}
func (m *GetCounterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCounterResponse.Merge(m, src)
}
func (m *GetCounterResponse) XXX_Size() int {
	return xxx_messageInfo_GetCounterResponse.Size(m)
}
func (m *GetCounterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCounterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCounterResponse proto.InternalMessageInfo

func (m *GetCounterResponse) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*IncrementCounterRequest)(nil), "proto.IncrementCounterRequest")
	proto.RegisterType((*GetCounterRequest)(nil), "proto.GetCounterRequest")
	proto.RegisterType((*GetCounterResponse)(nil), "proto.GetCounterResponse")
}

func init() { proto.RegisterFile("counter.proto", fileDescriptor_75dcd656fce7132f) }

var fileDescriptor_75dcd656fce7132f = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0x2f, 0xcd,
	0x2b, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xce, 0x5c,
	0xe2, 0x9e, 0x79, 0xc9, 0x45, 0xa9, 0xb9, 0xa9, 0x79, 0x25, 0xce, 0x10, 0x05, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x02, 0x5c, 0xcc, 0xd9, 0xa9, 0x95, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0x9c, 0x41, 0x20, 0xa6, 0x90, 0x18, 0x17, 0x5b, 0x62, 0x2e, 0x48, 0x91, 0x04, 0x93, 0x02, 0xa3,
	0x06, 0x73, 0x10, 0x94, 0xa7, 0xa4, 0xca, 0x25, 0xe8, 0x9e, 0x4a, 0x50, 0xbb, 0x92, 0x16, 0x97,
	0x10, 0xb2, 0xb2, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x11, 0x2e, 0xd6, 0xb2, 0xc4, 0x9c,
	0xd2, 0x54, 0xb0, 0x4a, 0xe6, 0x20, 0x08, 0xc7, 0x68, 0x36, 0x23, 0x17, 0x3b, 0x54, 0xa5, 0x90,
	0x23, 0x17, 0x17, 0x94, 0xe9, 0x9e, 0x5a, 0x22, 0x24, 0x01, 0xf1, 0x80, 0x1e, 0x86, 0x8d, 0x52,
	0x92, 0x58, 0x64, 0xa0, 0x96, 0xf8, 0x72, 0x09, 0x40, 0x85, 0xe0, 0xbe, 0x15, 0x92, 0x83, 0x2a,
	0xc7, 0xe1, 0x7f, 0x3c, 0xc6, 0x25, 0xb1, 0x81, 0x65, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xc5, 0x96, 0x37, 0xdc, 0x54, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CounterClient is the client API for Counter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CounterClient interface {
	CounterGet(ctx context.Context, in *GetCounterRequest, opts ...grpc.CallOption) (*GetCounterResponse, error)
	CounterIncrement(ctx context.Context, in *IncrementCounterRequest, opts ...grpc.CallOption) (*GetCounterResponse, error)
}

type counterClient struct {
	cc *grpc.ClientConn
}

func NewCounterClient(cc *grpc.ClientConn) CounterClient {
	return &counterClient{cc}
}

func (c *counterClient) CounterGet(ctx context.Context, in *GetCounterRequest, opts ...grpc.CallOption) (*GetCounterResponse, error) {
	out := new(GetCounterResponse)
	err := c.cc.Invoke(ctx, "/proto.Counter/CounterGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterClient) CounterIncrement(ctx context.Context, in *IncrementCounterRequest, opts ...grpc.CallOption) (*GetCounterResponse, error) {
	out := new(GetCounterResponse)
	err := c.cc.Invoke(ctx, "/proto.Counter/CounterIncrement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CounterServer is the server API for Counter service.
type CounterServer interface {
	CounterGet(context.Context, *GetCounterRequest) (*GetCounterResponse, error)
	CounterIncrement(context.Context, *IncrementCounterRequest) (*GetCounterResponse, error)
}

func RegisterCounterServer(s *grpc.Server, srv CounterServer) {
	s.RegisterService(&_Counter_serviceDesc, srv)
}

func _Counter_CounterGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCounterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterServer).CounterGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Counter/CounterGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterServer).CounterGet(ctx, req.(*GetCounterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Counter_CounterIncrement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncrementCounterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterServer).CounterIncrement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Counter/CounterIncrement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterServer).CounterIncrement(ctx, req.(*IncrementCounterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Counter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Counter",
	HandlerType: (*CounterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CounterGet",
			Handler:    _Counter_CounterGet_Handler,
		},
		{
			MethodName: "CounterIncrement",
			Handler:    _Counter_CounterIncrement_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "counter.proto",
}
